{"version":3,"file":"component---src-components-virtual-photography-gallery-page-js-12396bd05ea2e5d16162.js","mappings":"qNAmFA,UAtEA,YAAuC,IACjCA,EA0BAC,EA3BiBC,EAAe,EAAfA,YAErB,EAAiCC,EAAAA,UAAe,GAAzCC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,EAAAA,UAAgB,GAA/CG,EAAP,KAAoBC,EAApB,KACQC,EAAeN,EAAfM,WAEFC,EAA6B,OAAfD,EAAsBE,EAAAA,UAAAA,mBAAsCA,EAAAA,UAAiBF,GAC3FG,GAAmC,IAAjBL,EAAqB,GAAKG,EAAYG,OAAON,GAM/DO,EAAY,SAACC,EAAYC,GAC7BR,EAAeQ,IAGXC,EAAa,WACjBX,GAAU,IAGNY,GAAkBN,EAAkBA,EAAgBO,MAAQ,UAAhD,SAmBlB,OAjBAC,EAAAA,EAAAA,YAAU,WACRnB,EAAaoB,SAASC,eAAe,uBAIlB,IAAjBf,GAAuBgB,IAAQX,KACjCV,EACE,gBAAC,IAAD,eACEY,UAAWA,EACXG,WAAYA,EACZO,MAAOjB,EACPkB,UAAWf,EAAYG,OAAOa,QAC1Bd,KAMR,uBAAKe,UAAU,qBAAqBC,GAAG,eACrC,gBAAC,IAAD,MACA,gBAAC,IAAD,CACEC,OAAQxB,EACRyB,eAAgBb,EAChBU,UAAU,uBACVT,aAAcA,EACdjB,WAAYA,IAEVsB,IAAQX,IAAoBV,GAEhC,2BACE,gBAAC,IAAD,eACE6B,UAAQ,GACJrB,EAFN,CAGEkB,GAAInB,EACJuB,UAhDU,WAChB1B,GAAU,IAgDJ2B,QAASnB,EACTP,YAAaA","sources":["webpack://personal-site/./src/components/virtual-photography/GalleryPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactModal from 'react-modal';\nimport isEmpty from 'lodash/isEmpty';\n\nimport Header from '../Header';\nimport Modal from './Portfolio/Modal';\nimport Gallery from './Portfolio/Gallery';\n\nimport '../../pages/VirtualPhotography.scss';\n\nimport config from '../../photos.json';\n\nfunction GalleryPage({ pageContext }) {\n  let appElement;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [activeImage, setActiveImage] = React.useState(-1);\n  const { galleryKey } = pageContext;\n\n  const galleryData = galleryKey === '/*' ? config.galleries['elden-ring-npcs'] : config.galleries[galleryKey];\n  const activeImageData = activeImage === -1 ? {} : galleryData.images[activeImage];\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const openImage = (imageIndex, arg2) => {\n    setActiveImage(arg2);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const contentLabel = `${activeImageData ? activeImageData.title : 'Closed'} Modal`;\n\n  useEffect(() => {\n    appElement = document.getElementById('react-portfolio');\n  });\n\n  let renderModal;\n  if (activeImage !== -1 && !isEmpty(activeImageData)) {\n    renderModal = (\n      <Modal\n        openImage={openImage}\n        closeModal={closeModal}\n        index={activeImage}\n        maxImages={galleryData.images.length}\n        {...activeImageData}\n      />\n    );\n  }\n\n  return (\n    <div className=\"virtualPhotography\" id=\"galleryPage\">\n      <Header />\n      <ReactModal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        className=\"reactPortfolio-modal\"\n        contentLabel={contentLabel}\n        appElement={appElement}\n      >\n        {!isEmpty(activeImageData) && renderModal}\n      </ReactModal>\n      <div>\n        <Gallery\n          expanded\n          {...galleryData}\n          id={galleryKey}\n          openModal={openModal}\n          onFocus={openImage}\n          activeImage={activeImage}\n        />\n      </div>\n    </div>\n  );\n}\n\nGalleryPage.propTypes = {\n  pageContext: PropTypes.object.isRequired,\n};\n\nexport default GalleryPage;\n"],"names":["appElement","renderModal","pageContext","React","modalIsOpen","setIsOpen","activeImage","setActiveImage","galleryKey","galleryData","config","activeImageData","images","openImage","imageIndex","arg2","closeModal","contentLabel","title","useEffect","document","getElementById","isEmpty","index","maxImages","length","className","id","isOpen","onRequestClose","expanded","openModal","onFocus"],"sourceRoot":""}